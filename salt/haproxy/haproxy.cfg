global
{% for addrs in salt['mine.get']('es1', 'network.ip_addrs').values() %}
    log {{ addrs[0] }}:5544 local2
{% endfor %}
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    maxconn 4000
    user haproxy
    group haproxy
    daemon
    stats socket /var/lib/haproxy/stats

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

frontend main *:80
    default_backend portal
    stats enable
    stats hide-version
    stats refresh 5s
    stats show-node
    stats auth portal-de-servicos:7621892f9a37e0e08812c07f8b70533f2c286297
    stats uri /lb-stats
    acl is_editor path_beg /editar
    use_backend editor if is_editor

frontend elasticsearch *:9200
    default_backend elasticsearch

backend portal
    balance roundrobin
{% for server, addrs in salt['mine.get']('app*', 'network.ip_addrs').items() %}
    server {{ server }} {{ addrs[0] }}:8080 check
{% endfor %}

backend editor
    balance roundrobin
{% for server, addrs in salt['mine.get']('app*', 'network.ip_addrs').items() %}
    server {{ server }} {{ addrs[0] }}:8090 check
{% endfor %}

backend elasticsearch
{% for server, addrs in salt['mine.get']('es*', 'network.ip_addrs').items() %}
    server {{ server }} {{ addrs[0] }}:9200 check
{% endfor %}

backend logstash
{% for server, addrs in salt['mine.get']('es1', 'network.ip_addrs').items() %}
    server {{ server }} {{ addrs[0] }}:9200 check
{% endfor %}

